sample$exper <- ifelse(sample$educ_bin == "no_high_school_degree", sample$age - 17, sample$educ_bin)
sample$exper <- ifelse(sample$educ_bin == "high_school_degree", sample$age - 19, sample$exper)
sample$exper <- ifelse(sample$educ_bin == "some_college", sample$age - 21, sample$exper)
sample$exper <- ifelse(sample$educ_bin == "college_degree", sample$age - 23, sample$exper)
sample$exper <- ifelse(sample$exper < 0, 0, sample$exper) # if experience is negative, then 0
sample$exper <- as.numeric(sample$exper)
sample$expersq <- sample$exper^2
# creating a regional variables
sample$top_states <- ifelse(sample$stfips %in% c("NY","NJ","DE","CO","CA","MA","RI"), 1, 0)
sample$low_states <- ifelse(sample$stfips %in% c("MS","AR","WV","NM","ID"), 1, 0)
# creating an industry dummy
sample$top_industry <- ifelse(sample$ind02 == "Securities, commodities, funds, trusts, and other financial investments (523, 525)"|sample$ind02 == "Computer systems design and related services (5415)",1,0)
# 2 observations with negative log_wage are deleted (significant outliers and highly likely to be errors)
sample <- sample %>%
filter(log_wage > 0)
# figire1
p1 <- ggplot(data = sample, aes(x = educ, y = log_wage)) +
geom_jitter(width = 0.08,color = "azure4", size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
geom_smooth(method="loess", color="blueviolet", se=F, size=0.8, na.rm=T)+
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
p2 <- ggplot(data = sample, aes(x = exper, y = log_wage)) +
geom_jitter(width = 0.08,color = "azure4", size = 1.5,  shape = 16, alpha = 0.5, show.legend=FALSE, na.rm=TRUE) +
geom_smooth(method="loess", color="blueviolet", se=F, size=0.8, na.rm=T)+
labs(x = "Experience (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
graph1 <- grid.arrange(p1, p2, ncol=2)
ggsave("graphs/graph1.png",plot = graph1, width = 10, height = 5, units = "in", dpi = 300)
View(sample)
ggplot(data = sample, aes(x = male, y = hourly_wage)) +
geom_boxplot(color = "azure4", size = 1.5,  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
ggplot(data = sample, aes(x = male, y = hourly_wage)) +
geom_boxplot(color = "blueviolet", size = 1.5,  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet", size = 1.5,  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") +
scale_x_discrete(labels = c("Female", "Male"))+
theme_linedraw()
ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)") +
scale_x_discrete(labels = c("Female", "Male"))+
theme_linedraw()
ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Female", "Male"))+
theme_linedraw()
ggplot(data = sample, aes(x = as.factor(), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("No Black", "Black"))+
theme_linedraw()
ggplot(data = sample, aes(x = as.factor(race), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("No Black", "Black"))+
theme_linedraw()
ggplot(data = sample, aes(x = as.factor(black), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("No Black", "Black"))+
theme_linedraw()
p3 <- ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Female", "Male"))+
theme_linedraw()
p4 <- ggplot(data = sample, aes(x = as.factor(black), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Not Black", "Black"))+
theme_linedraw()
p5 <- ggplot(data = sample, aes(x = as.factor(married), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Not Married", "Married"))+
theme_linedraw()
graph2 <- grid.arrange(p3, p4, p5, ncol=3)
ggsave("graphs/graph2.png",plot = graph1, width = 10, height = 5, units = "in", dpi = 300)
# graph2 boxplot
p3 <- ggplot(data = sample, aes(x = as.factor(male), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Female", "Male"))+
theme_linedraw()
p4 <- ggplot(data = sample, aes(x = as.factor(black), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Not Black", "Black"))+
theme_linedraw()
p5 <- ggplot(data = sample, aes(x = as.factor(married), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Not Married", "Married"))+
theme_linedraw()
graph2 <- grid.arrange(p3, p4, p5, ncol=3)
ggsave("graphs/graph2.png",plot = graph2, width = 10, height = 5, units = "in", dpi = 300)
# Loading packages
library(tidyverse)
library(readr)
library(modelsummary)
library(fixest)
library(lmtest)
library(sandwich)
library(stargazer)
library(caret)
library(grid)
library(RColorBrewer)
library(ggthemes)
library(gridExtra)
library(lmtest)
library(sandwich)
# Loading data and filtering by occupation code
sample <- read_csv("raw_data/morg-2014-emp.csv") %>%
filter(occ2012 == "120")
## Preparing data for the analysis
# creating dependent variable hourly_wage and log hourly_wage
sample$hourly_wage <- sample$earnwke/sample$uhours
sample$log_wage <- log(sample$hourly_wage)
# creating necessary dummy variables
sample$male <- ifelse(sample$sex == 1, 1, 0)
sample$union <- ifelse(sample$unionmme == "Yes", 1, 0)
sample$married <- ifelse(sample$marital %in% c(1,2,3), 1, 0)
sample$widowed <- ifelse(sample$marital == 4, 1, 0)
sample$divorced <- ifelse(sample$marital == 5, 1, 0)
sample$separated <- ifelse(sample$marital == 6, 1, 0)
sample$never_married <- ifelse(sample$marital == 7, 1, 0)
sample$native_born_us <- ifelse(sample$prcitshp == "Native, Born In US", 1, 0)
sample$white <- ifelse(sample$race == 1, 1, 0)
sample$black <- ifelse(sample$race == 2, 1, 0)
sample$asian <- ifelse(sample$race == 4, 1, 0)
sample$hard_workers <- ifelse(sample$uhours > 50, 1, 0)
sample$no_child <- ifelse(sample$ownchild == 0, 1, 0)
# transforming education variable into years of schooling
sample$educ <- ifelse(sample$grade92 == 34, 8, sample$grade92)
sample$educ <- ifelse(sample$grade92 == 35, 9, sample$educ)
sample$educ <- ifelse(sample$grade92 == 36, 10, sample$educ)
sample$educ <- ifelse(sample$grade92 == 37, 11, sample$educ)
sample$educ <- ifelse(sample$grade92 == 39, 12, sample$educ)
sample$educ <- ifelse(sample$grade92 == 40, 13, sample$educ)
sample$educ <- ifelse(sample$grade92 == 41, 14, sample$educ)
sample$educ <- ifelse(sample$grade92 == 42, 14, sample$educ)
sample$educ <- ifelse(sample$grade92 == 43, 16, sample$educ)
sample$educ <- ifelse(sample$grade92 == 44, 18, sample$educ)
sample$educ <- ifelse(sample$grade92 == 45, 22, sample$educ)
sample$educ <- ifelse(sample$grade92 == 46, 22, sample$educ)
# creating binning variable for grade92
sample$educ_bin <- ifelse(sample$grade92 <= 38, "no_high_school_degree", sample$grade92)
sample$educ_bin <- ifelse(sample$grade92 == 39, "high_school_degree", sample$educ_bin)
sample$educ_bin <- ifelse(sample$grade92 == 40, "some_college", sample$educ_bin)
sample$educ_bin <- ifelse(sample$grade92 >= 41, "college_degree", sample$educ_bin)
# creating experience variable
sample$exper <- ifelse(sample$educ_bin == "no_high_school_degree", sample$age - 17, sample$educ_bin)
sample$exper <- ifelse(sample$educ_bin == "high_school_degree", sample$age - 19, sample$exper)
sample$exper <- ifelse(sample$educ_bin == "some_college", sample$age - 21, sample$exper)
sample$exper <- ifelse(sample$educ_bin == "college_degree", sample$age - 23, sample$exper)
sample$exper <- ifelse(sample$exper < 0, 0, sample$exper) # if experience is negative, then 0
sample$exper <- as.numeric(sample$exper)
sample$expersq <- sample$exper^2
# creating a regional variables
sample$top_states <- ifelse(sample$stfips %in% c("NY","NJ","DE","CO","CA","MA","RI"), 1, 0)
sample$low_states <- ifelse(sample$stfips %in% c("MS","AR","WV","NM","ID"), 1, 0)
# creating an industry dummy
sample$top_industry <- ifelse(sample$ind02 == "Securities, commodities, funds, trusts, and other financial investments (523, 525)"|sample$ind02 == "Computer systems design and related services (5415)",1,0)
# 2 observations with negative log_wage are deleted (significant outliers and highly likely to be errors)
sample <- sample %>%
filter(log_wage > 0)
# figire1
p1 <- ggplot(data = sample, aes(x = educ, y = log_wage)) +
geom_jitter(width = 0.08,color = "azure4", size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
geom_smooth(method="loess", color="blueviolet", se=F, size=0.8, na.rm=T)+
labs(x = "Education (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
p2 <- ggplot(data = sample, aes(x = exper, y = log_wage)) +
geom_jitter(width = 0.08,color = "azure4", size = 1.5,  shape = 16, alpha = 0.5, show.legend=FALSE, na.rm=TRUE) +
geom_smooth(method="loess", color="blueviolet", se=F, size=0.8, na.rm=T)+
labs(x = "Experience (years)", y = "ln(Hourly wage, US dollars)") + theme_linedraw()
graph1 <- grid.arrange(p1, p2, ncol=2)
ggsave("graphs/graph1.png",plot = graph1, width = 10, height = 5, units = "in", dpi = 300)
# Table 1 regression of log_wage on educ, exper and summarize results
regression_1 <- lm(log_wage ~ educ + exper + expersq, data = sample)
summary(regression_1)
coeftest(regression_1, vcov = sandwich)
# Linear regressions in logs
# Model 1: Linear regression on age
model1log <- as.formula(log_wage ~ educ + exper + expersq)
# Models 2-4:
model2log <- as.formula(log_wage ~ educ + exper + expersq + male + married + black + no_child + native_born_us)
model3log <- as.formula(log_wage ~ educ + exper + expersq + male + married + black + no_child + native_born_us + top_states+low_states+hard_workers+top_industry)
model4log <- as.formula(log_wage ~ educ + exper + expersq + male + married + black + no_child +native_born_us + top_states+low_states+hard_workers+top_industry + black*male + married*male + top_states*top_industry,low_states*top_industry+male*no_child + educ*male + educ*black)
reg1log <- lm(model1log, data=sample)
reg2log <- lm(model2log, data=sample)
reg3log <- lm(model3log, data=sample)
reg4log <- lm(model4log, data=sample)
# evaluation of the models
models <- c("reg1log", "reg2log","reg3log", "reg4log")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
k <- c()
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- RMSE(predict(get(models[i])), get(models[i])$model$log_wage)
RSquared[i] <-summary(get(models[i]))$r.squared
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
k[i] <- get(models[i])$rank -1
}
############################################################
# Linear regression evaluation
# All models
eval <- data.frame(models, k, RSquared, RMSE, BIC)
eval <- eval %>%
mutate(models = paste0("(",gsub("reg","",models),")")) %>%
rename(Model = models, "R-squared" = RSquared, "Training RMSE" = RMSE, "N predictors" = k)
stargazer(eval, summary = F, digits=2, float = F, no.space = T)
# Cross-validation
# set number of folds (4 because of small sample)
k <- 4
# need to set the same seed again and again
set.seed(081123)
cv1log <- train(model1log, sample, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(081123)
cv2log <- train(model2log, sample, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(081123)
cv3log <- train(model3log, sample, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(081123)
cv4log <- train(model4log, sample, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1log", "cv2log", "cv3log", "cv4log")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_matlog <- data.frame(rbind(cv1log$resample[4], "Average"),
rbind(cv1log$resample[1], rmse_cv[1]),
rbind(cv2log$resample[1], rmse_cv[2]),
rbind(cv3log$resample[1], rmse_cv[3]),
rbind(cv4log$resample[1], rmse_cv[4])
)
colnames(cv_matlog)<-c("Resample","Model1log", "Model2log", "Model3log", "Model4log")
cv_matlog
stargazer(cv_matlog, summary = F, digits=3, float=F, sep="")
stargazer_r(list(reg1, reg2, reg3, reg4 ), float=F, se = 'robust', digits=2, dep.var.caption = "Dep. var: price", keep.stat = c("rsq","n"),no.space = T)
stargazer(list(reg1, reg2, reg3, reg4 ), float=F, se = 'robust', digits=2, dep.var.caption = "Dep. var: price", keep.stat = c("rsq","n"),no.space = T)
stargazer(list(reg1log, reg2log, reg3log, reg4log ), float=F, se = 'robust', digits=2, dep.var.caption = "Dep. var: price", keep.stat = c("rsq","n"),no.space = T)
stargazer(reg1log)
stargazer(reg1log, reg2log, reg3log, reg4log)
stargazer(reg1log, reg2log, reg3log)
summary(reg1log)
summary(reg1log)
summary(reg2log)
summary(reg3log)
summary(reg4log)
# Prediction
data <- sample %>% dplyr::select(educ,exper,log_wage)
View(data)
# Prediction
data <- sample %>% dplyr::select(educ,exper,expersq,log_wage)
View(data)
# Add new observation
new <- list(educ = 12, exper = 11, expersq = 121, log_wage=NA)
data <- sample %>% dplyr::select(educ,exper,expersq,log_wage)
# Add new observation
new <- list(educ = 12, exper = 11, expersq = 121, log_wage=NA)
reg3 <- lm(log_wage ~ educ  + exper + expersq, data=data)
summary(reg3)
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$lnprice)
View(data)
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$log_wage)
predln_new <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction")
predln_new80 <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction", level=0.80)
predln_new80
lnp2_new <- predln_new$fit[[1]]
# predictions in levels
data$lnplev <- exp(data$lnp2)*exp((rmse3^2)/2)
lnp2_new_lev <- exp(lnp2_new)*exp((rmse3^2)/2)
# prediction intervals (log and level)
lnp2_PIlow <- predln_new$fit[2]
lnp2_PIhigh <- predln_new$fit[3]
lnplev_PIlow <- exp(lnp2_PIlow)*exp(rmse3^2/2)
lnplev_PIhigh <- exp(lnp2_PIhigh)*exp(rmse3^2/2)
#80%
lnp2_PIlow80 <- predln_new80$fit[2]
lnp2_PIhigh80 <- predln_new80$fit[3]
lnplev_PIlow80 <- exp(lnp2_PIlow80)*exp(rmse3^2/2)
lnplev_PIhigh80 <- exp(lnp2_PIhigh80)*exp(rmse3^2/2)
# summary of predictions and PI
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
View(sum)
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
sum <- matrix( c( lnp2_new, lnp2_PIlow80 ,lnp2_PIhigh80,
lnp2_new_lev, lnplev_PIlow80, lnplev_PIhigh80) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low 80%', 'PI_high 80%')
sum
data <- sample %>% dplyr::select(educ,exper,expersq,log_wage)
# Add new observation
new <- list(educ = 18, exper = 11, expersq = 121, log_wage=NA)
reg3 <- lm(log_wage ~ educ  + exper + expersq, data=data)
summary(reg3)
# prediction
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$log_wage)
# prediction for new observation
predln_new <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction")
predln_new80 <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction", level=0.80)
predln_new80
lnp2_new <- predln_new$fit[[1]]
# predictions in levels
data$lnplev <- exp(data$lnp2)*exp((rmse3^2)/2)
lnp2_new_lev <- exp(lnp2_new)*exp((rmse3^2)/2)
# prediction intervals (log and level)
lnp2_PIlow <- predln_new$fit[2]
lnp2_PIhigh <- predln_new$fit[3]
lnplev_PIlow <- exp(lnp2_PIlow)*exp(rmse3^2/2)
lnplev_PIhigh <- exp(lnp2_PIhigh)*exp(rmse3^2/2)
#80%
lnp2_PIlow80 <- predln_new80$fit[2]
lnp2_PIhigh80 <- predln_new80$fit[3]
lnplev_PIlow80 <- exp(lnp2_PIlow80)*exp(rmse3^2/2)
lnplev_PIhigh80 <- exp(lnp2_PIhigh80)*exp(rmse3^2/2)
# summary of predictions and PI
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
sum <- matrix( c( lnp2_new, lnp2_PIlow80 ,lnp2_PIhigh80,
lnp2_new_lev, lnplev_PIlow80, lnplev_PIhigh80) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low 80%', 'PI_high 80%')
stargazer(sum, type = "latex", float=F, digits=2)
summary(reg3log)
data <- sample %>% dplyr::select(educ,exper,expersq,male,married,black, no_child,native_born_us,
top_states,low_states,hard_workers,top_industry,log_wage)
# Add new observation
new <- list(educ = 18, exper = 11, expersq = 121,male = 1,married = 0,black = 0, no_child = 1,native_born_us = 1,
top_states = 1,low_states = 0,hard_workers = 1,top_industry = 1, log_wage=NA)
reg3 <- lm(log_wage ~ educ + exper + expersq + male + married + black + no_child + native_born_us +
top_states+low_states+hard_workers+top_industry, data=data)
summary(reg3)
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$log_wage)
# prediction for new observation
predln_new <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction")
predln_new80 <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction", level=0.80)
predln_new80
lnp2_new <- predln_new$fit[[1]]
# predictions in levels
data$lnplev <- exp(data$lnp2)*exp((rmse3^2)/2)
lnp2_new_lev <- exp(lnp2_new)*exp((rmse3^2)/2)
# prediction intervals (log and level)
lnp2_PIlow <- predln_new$fit[2]
lnp2_PIhigh <- predln_new$fit[3]
lnplev_PIlow <- exp(lnp2_PIlow)*exp(rmse3^2/2)
lnplev_PIhigh <- exp(lnp2_PIhigh)*exp(rmse3^2/2)
#80%
lnp2_PIlow80 <- predln_new80$fit[2]
lnp2_PIhigh80 <- predln_new80$fit[3]
lnplev_PIlow80 <- exp(lnp2_PIlow80)*exp(rmse3^2/2)
lnplev_PIhigh80 <- exp(lnp2_PIhigh80)*exp(rmse3^2/2)
# summary of predictions and PI
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
sum <- matrix( c( lnp2_new, lnp2_PIlow80 ,lnp2_PIhigh80,
lnp2_new_lev, lnplev_PIlow80, lnplev_PIhigh80) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low 80%', 'PI_high 80%')
stargazer(sum, type = "latex", float=F, digits=2)
data <- sample %>% dplyr::select(educ,exper,expersq,male,married,black, no_child,native_born_us,
top_states,low_states,hard_workers,top_industry,log_wage)
# Add new observation
new <- list(educ = 18, exper = 11, expersq = 121,male = 1,married = 0,black = 1, no_child = 1,native_born_us = 1,
top_states = 1,low_states = 0,hard_workers = 1,top_industry = 1, log_wage=NA)
reg3 <- lm(log_wage ~ educ + exper + expersq + male + married + black + no_child + native_born_us +
top_states+low_states+hard_workers+top_industry, data=data)
summary(reg3)
# prediction
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$log_wage)
# prediction for new observation
predln_new <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction")
predln_new80 <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction", level=0.90)
predln_new80
lnp2_new <- predln_new$fit[[1]]
# predictions in levels
data$lnplev <- exp(data$lnp2)*exp((rmse3^2)/2)
lnp2_new_lev <- exp(lnp2_new)*exp((rmse3^2)/2)
# prediction intervals (log and level)
lnp2_PIlow <- predln_new$fit[2]
lnp2_PIhigh <- predln_new$fit[3]
lnplev_PIlow <- exp(lnp2_PIlow)*exp(rmse3^2/2)
lnplev_PIhigh <- exp(lnp2_PIhigh)*exp(rmse3^2/2)
#80%
lnp2_PIlow80 <- predln_new80$fit[2]
lnp2_PIhigh80 <- predln_new80$fit[3]
lnplev_PIlow80 <- exp(lnp2_PIlow80)*exp(rmse3^2/2)
lnplev_PIhigh80 <- exp(lnp2_PIhigh80)*exp(rmse3^2/2)
# summary of predictions and PI
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
sum <- matrix( c( lnp2_new, lnp2_PIlow80 ,lnp2_PIhigh80,
lnp2_new_lev, lnplev_PIlow80, lnplev_PIhigh80) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low 80%', 'PI_high 80%')
stargazer(sum, type = "latex", float=F, digits=2)
# Prediction
data <- sample %>% dplyr::select(educ,exper,expersq,male,married,black, no_child,native_born_us,
top_states,low_states,hard_workers,top_industry,log_wage)
# Add new observation
new <- list(educ = 18, exper = 11, expersq = 121,male = 1,married = 0,black = 0, no_child = 1,native_born_us = 1,
top_states = 1,low_states = 0,hard_workers = 1,top_industry = 1, log_wage=NA)
reg3 <- lm(log_wage ~ educ + exper + expersq + male + married + black + no_child + native_born_us +
top_states+low_states+hard_workers+top_industry, data=data)
summary(reg3)
# prediction
data$lnp2 <- predict(reg3, data)
rmse3 <- RMSE(data$lnp2,data$log_wage)
# prediction for new observation
predln_new <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction")
predln_new80 <- predict(reg3, newdata = new,se.fit = TRUE, interval = "prediction", level=0.90)
predln_new80
lnp2_new <- predln_new$fit[[1]]
# predictions in levels
data$lnplev <- exp(data$lnp2)*exp((rmse3^2)/2)
lnp2_new_lev <- exp(lnp2_new)*exp((rmse3^2)/2)
# prediction intervals (log and level)
lnp2_PIlow <- predln_new$fit[2]
lnp2_PIhigh <- predln_new$fit[3]
lnplev_PIlow <- exp(lnp2_PIlow)*exp(rmse3^2/2)
lnplev_PIhigh <- exp(lnp2_PIhigh)*exp(rmse3^2/2)
#80%
lnp2_PIlow80 <- predln_new80$fit[2]
lnp2_PIhigh80 <- predln_new80$fit[3]
lnplev_PIlow80 <- exp(lnp2_PIlow80)*exp(rmse3^2/2)
lnplev_PIhigh80 <- exp(lnp2_PIhigh80)*exp(rmse3^2/2)
# summary of predictions and PI
sum <- matrix( c( lnp2_new, lnp2_PIlow ,lnp2_PIhigh,
lnp2_new_lev, lnplev_PIlow, lnplev_PIhigh) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low', 'PI_high')
sum
sum <- matrix( c( lnp2_new, lnp2_PIlow80 ,lnp2_PIhigh80,
lnp2_new_lev, lnplev_PIlow80, lnplev_PIhigh80) , nrow = 3 ,ncol = 2)
colnames(sum) <- c('Model in logs', 'Recalculated to level')
rownames(sum) <- c('Predicted', 'PI_low 80%', 'PI_high 80%')
stargazer(sum, type = "latex", float=F, digits=2)
# graph2 boxplot
p6 <- ggplot(data = sample, aes(x = as.factor(top_states), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Top Paying States"))+
theme_linedraw()
p7 <- ggplot(data = sample, aes(x = as.factor(low_states), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Low Paying States"))+
theme_linedraw()
p8 <- ggplot(data = sample, aes(x = as.factor(top_industry), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Top Paying Industries"))+
theme_linedraw()
graph2 <- grid.arrange(p6, p7, p8, ncol=3)
ggsave("graphs/graph3.png",plot = graph3, width = 10, height = 5, units = "in", dpi = 300)
# graph2 boxplot
p6 <- ggplot(data = sample, aes(x = as.factor(top_states), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Top Paying States"))+
theme_linedraw()
p7 <- ggplot(data = sample, aes(x = as.factor(low_states), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Low Paying States"))+
theme_linedraw()
p8 <- ggplot(data = sample, aes(x = as.factor(top_industry), y = hourly_wage)) +
geom_boxplot(color = "blueviolet",  alpha = 0.8, show.legend=FALSE, na.rm=TRUE) +
labs( y = "ln(Hourly wage, US dollars)", x = " ") +
scale_x_discrete(labels = c("Others", "Top Paying Industries"))+
theme_linedraw()
graph3 <- grid.arrange(p6, p7, p8, ncol=3)
ggsave("graphs/graph3.png",plot = graph3, width = 10, height = 5, units = "in", dpi = 300)
